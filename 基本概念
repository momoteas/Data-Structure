1 基本概念：
    。算法效率：
        。最坏情况复杂度 T[wors]](n);
        。平均复杂度 T[avg](n);
        。一般情况下，平均复杂度 < 最坏复杂度；
        。复杂度分析小窍门：
            。若两段算法分别有复杂度T[1](n)=O(f[1](n))和T[2](n)=O(f[2](n)),则：
                。T[1](n) + T[2](n) = max(O(f[1](n), O(f[2](n)));
                。T[1](n) * T[2](n) = O(f[1](n) * f[2](n))
            。若T(n)时关于n的k阶多项式，那么T(n)=O(n的次方)
            。一个for循环的时间复杂度等于循环次数乘以循环体代码的复杂度；
            。if-else结构的复杂度取决于if的条件判断复杂度和两个分支部分的复杂度，总体复杂度取三者中最大；
        。分而治之思想：
      
2 线性结构：
    。2.1 线性表及其实现：
        。顺序存储结构直接表示：数组各分量对应多项式各项。a[i]:项x^i的系数a下标i;
            。缺点：容易造成空间的浪费；
        。顺序存储结构表示非零项：
            。用结构数组表示：数组分量是由系数a^i,指数i组成的结构，对应一个非零项；
            。按指数大小有序存储；
            。相加过程：从头开始，比较两个多项式当前对应项的指数；
        。链表结构存储非零项：
            。链表中每个节点存储多项式中的一个非零项，包括系数和指数两个数据域以及一个指针域；
            。结构定义：      typedef struct PolyNode *Polynomial;
                            struct PolyNode{
                                int coef;
                                int expon;
                                Polynomial link;
                            };
        。什么时线性表：
            。Linear List:由同类型数据元素构成有序序列的线性结构；
                。表中元素个数称为线性表的长度；
                。线性表没有元素时，成为空表；
                。表起始位置称为表头，表结束位置称表尾；
      
      
      
      
      
      
      
      
      
