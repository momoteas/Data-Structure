1 树：
    。什么是树：客观世界中许多事物存在层次关系；
    。顺序查找：
        。静态查找：集合中的记录是固定的
        。动态查找：集合中的记录是动态的
    。二分查找：（binary search）
        。假设n个数据元素的关键字满足有序（比如：从小到大）K1 < K2 < ...< Kn，并且是连续存放（树组），那么可以进行二分查找；
        。二分查找判定树：n个结点的判定树的深度为[log以2为底n]+1，代表最坏查找的深度；
    。树的定义：
        。树：n(n>=0)个结点构成的有限集合。当n=0时，称为空树；
        。对于一个棵非空树（n>0）,它具备以下性质：
            。树中有一个称为“根”的特殊结点，用r表示；
            。其余结点可分为m(m>0)互不相交的有限集T1，T2，...，Tm，其中每个集合本身又是一颗树，称为原来树的“子树”（subtree）
    。树与非树：
        。子树是不相交的；
        。除了根结点外，每个结点有且仅有一个父结点；
        。一个N个结点的树由N-1条边；
    。树的一些基本术语：
        。结点的度（Degree）:结点的子树个树；
        。树的度：树的所有结点中最大的度数；
        。叶结点（Leaf):度为0的结点；
        。父结点（Parent）:有子树的结点是其子树的根结点的父结点；
        。子结点（Child）:若A结点是B结点的父结点，则称B结点是A结点的子结点；子结点也称孩子结点；
        。兄弟结点（Sibling）:具有同一父结点的各结点彼此是兄弟结点；
        。路径和路径的长度：从结点n1到nk的路径为一个结点序列n1,n2,...,nk,ni是ni+1的父结点。路径所包含边的个树为路径的长度；
        。祖先结点（Ancestor）:沿树根到某一结点路径上的所有结点都是这个结点的祖先结点；
        。子孙结点（Descentdant）:某一结点的子树中的所有结点是这个结点的子孙；
        。结点的层次（Level）:规定根结点在1层，其它任一结点的层数是其父结点的层数加1；
        。树的深度（Depth）:树中所有结点中最大层次是这棵树的深度；






